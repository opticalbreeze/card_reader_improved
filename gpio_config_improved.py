#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
GPIO設定ファイル（改善版）
Raspberry Pi用のGPIO設定（ピン番号、ブザーパターン、LED色）

使用方法:
    from gpio_config import *
"""

# ============================================================================
# GPIO ピン番号設定（BCMモード）
# ============================================================================

BUZZER_PIN = 18       # 圧電ブザー接続ピン
LED_RED_PIN = 13      # 赤LED接続ピン
LED_GREEN_PIN = 19    # 緑LED接続ピン
LED_BLUE_PIN = 26     # 青LED接続ピン

# ============================================================================
# ブザーパターン設定
# ============================================================================

# 各パターンは (duration, frequency) のタプルのリスト
# duration: 鳴動時間（秒）
# frequency: 周波数（Hz）

BUZZER_PATTERNS = {
    # 起動時: 長-短-長
    "startup": [
        (0.2, 1000),    # 200ms, 1000Hz
        (0.1, 1000),    # 100ms, 1000Hz
        (0.2, 1000)     # 200ms, 1000Hz
    ],
    
    # サーバー接続時: 短-短-短
    "connect": [
        (0.1, 1500),    # 100ms, 1500Hz
        (0.1, 1500),    # 100ms, 1500Hz
        (0.1, 1500)     # 100ms, 1500Hz
    ],
    
    # カード読み込み時: 短（高音）
    "card_read": [
        (0.05, 2000)    # 50ms, 2000Hz
    ],
    
    # 送信成功時: 短-短-短（高音）
    "success": [
        (0.1, 2500),    # 100ms, 2500Hz
        (0.05, 2500),   # 50ms, 2500Hz
        (0.1, 2500)     # 100ms, 2500Hz
    ],
    
    # 送信失敗時: 長-短-長（低音）
    "failure": [
        (0.3, 800),     # 300ms, 800Hz
        (0.1, 800),     # 100ms, 800Hz
        (0.3, 800)      # 300ms, 800Hz
    ]
}

# ============================================================================
# LED色設定（RGB PWMデューティ比: 0-100）
# ============================================================================

LED_COLORS = {
    "off": (0, 0, 0),            # 消灯
    "red": (100, 0, 0),          # 赤（エラー、待機中）
    "green": (0, 100, 0),        # 緑（正常動作）
    "blue": (0, 0, 100),         # 青（送信成功）
    "orange": (100, 50, 0),      # オレンジ（警告、ローカル保存）
    "white": (100, 100, 100),    # 白（テスト用）
    "yellow": (100, 100, 0),     # 黄色（処理中）
    "purple": (100, 0, 100),     # 紫（特殊状態）
    "cyan": (0, 100, 100)        # シアン（情報）
}

# ============================================================================
# I2C LCD設定
# ============================================================================

LCD_I2C_ADDR = 0x27    # LCD I2Cアドレス（デフォルト）
                       # 他の一般的なアドレス: 0x3F

LCD_I2C_BUS = 1        # I2Cバス番号
                       # Raspberry Pi 3/4: バス1
                       # Raspberry Pi 初期モデル: バス0

# ============================================================================
# 使用例
# ============================================================================

if __name__ == "__main__":
    print("="*60)
    print("GPIO設定ファイル（改善版）")
    print("="*60)
    print()
    
    print("[GPIO ピン設定]")
    print(f"  ブザー: GPIO {BUZZER_PIN}")
    print(f"  赤LED: GPIO {LED_RED_PIN}")
    print(f"  緑LED: GPIO {LED_GREEN_PIN}")
    print(f"  青LED: GPIO {LED_BLUE_PIN}")
    print()
    
    print("[ブザーパターン]")
    for name, pattern in BUZZER_PATTERNS.items():
        print(f"  {name}:")
        for duration, freq in pattern:
            print(f"    - {duration*1000:.0f}ms @ {freq}Hz")
    print()
    
    print("[LED色設定]")
    for name, (r, g, b) in LED_COLORS.items():
        print(f"  {name:8s}: R={r:3d} G={g:3d} B={b:3d}")
    print()
    
    print("[I2C LCD設定]")
    print(f"  I2Cアドレス: 0x{LCD_I2C_ADDR:02X}")
    print(f"  I2Cバス番号: {LCD_I2C_BUS}")
    print()

